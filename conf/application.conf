# https://www.playframework.com/documentation/latest/Configuration
baseUrl = "http://localhost:9000"

application.name = JWT Authentication System
application.log = INFO

// Secret to sign csrf and others encryption utils
// It is considered bad practice to put the production secret here
// you should to override it
play.http.secret.key = changeme

play.http.filters = io.xauth.web.filter.Filters
play.http.errorHandler = "io.xauth.web.handler.ErrorHandler"

// enabling modules that loads tasks at startup
play.modules.enabled += "io.xauth.StarterModule"
play.modules.enabled += "io.xauth.actor.ActorModule"
play.modules.enabled += "io.xauth.task.TasksModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"

akka {
  actor {
    default-dispatcher {
      fork-join-executor {
        // Settings this to 1 instead of 3 seems to improve performance.
        parallelism-factor = 1.0

        parallelism-max = 24

        // Setting this to LIFO changes the fork-join-executor
        // to use a stack discipline for task scheduling. This usually
        // improves throughput at the cost of possibly increasing
        // latency and risking task starvation (which should be rare).
        task-peeking-mode = LIFO
      }
    }
  }
}

task {
  // Task that cleans expired codes
  codeClean.interval = 1 // mins
  // Task that cleans expired refresh tokens
  tokenClean.interval = 30 // mins
}

// Root workspace configuration
workspace = {
  frontEnd = {
    baseUrl = "http://localhost:5137"
    routes = {
      activation = "/activation?code={code}"
      deletion = "/deletion?code={code}"
      contactTrust = "/contact-trust?code={code}"
      passwordReset = "/password-reset?code={code}"
      registrationInvitation = "/registration-invitation?code={code}&email={email}"
    }
  }
  // Json Web Token
  jwt = {
    expiration = {
      accessToken = 1800 // 30 minutes
      refreshToken = 12 // 12 hours
    }
    secretKey = {
      // symmetric/asymmetric algorithm are both supported
      algorithm = RS256
      // search path for keypair
      path = /home/auth/.jwt/keys
      // application will create private/public keypair at following paths:
      //  <path>/<workspace-id>-rsa.private.der
      //  <path>/<workspace-id>-rsa.public.der
    }
  }
  mail = {
    name = "XAuth"
    from = "system@xauth.id"
    smtp = {
      debug = false

      // SMTP server
      host = email-smtp.eu-west-1.amazonaws.com

      // - 25: when channel is set to clear or starttls
      // - 465: when channel is set to ssl
      port = 465
      user = "AKIATXUH5SO2H2ROFW6H"
      pass = "BMAgbJop8VgTdaqRhYBE9bLCIv5KcMCSdwBSeVubiIKl"

      //   - STARTTLS: port 25 that will switch to SSL/TLS
      //   - SSL: SMTP-over-SSL (SMTPS) connector, that is an SSL socket listening on port 465
      channel = SSL
    }
  }
}

// MongoDB
mongodb.uri = "mongodb://u_xauth:p_xauth@localhost:27017/xauth"
//mongodb.uri = "mongodb://administrator:Password001@xauth-ddb-dev.cluster-9v2vcnqrhxiz.eu-west-1.docdb.amazonaws.com:27017/xauth?ssl=true&keyStore=rds-combined-ca-bundle.p12&sslAllowsInvalidCert=true"

// Maximum login attempts before account block
auth.maxLoginAttempts = 5

// invitation.code.notification = manual | auto
//   - manual: code will be generated via api
//   - auto: code will be send via email
invitation.code.notification = auto
